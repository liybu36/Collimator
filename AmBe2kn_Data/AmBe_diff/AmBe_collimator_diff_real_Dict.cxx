//
// File generated by /usr/local/root_v5.34.21_enableall/bin/rootcint at Wed Jun  3 17:42:10 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME AmBe_collimator_diff_real_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AmBe_collimator_diff_real_Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void vectorlETCanvasmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETCanvasmUgR_Dictionary();
   static void *new_vectorlETCanvasmUgR(void *p = 0);
   static void *newArray_vectorlETCanvasmUgR(Long_t size, void *p);
   static void delete_vectorlETCanvasmUgR(void *p);
   static void deleteArray_vectorlETCanvasmUgR(void *p);
   static void destruct_vectorlETCanvasmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TCanvas*>*)
   {
      vector<TCanvas*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TCanvas*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TCanvas*>", -2, "/usr/local/root_v5.34.21_enableall/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TCanvas*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETCanvasmUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TCanvas*>) );
      instance.SetNew(&new_vectorlETCanvasmUgR);
      instance.SetNewArray(&newArray_vectorlETCanvasmUgR);
      instance.SetDelete(&delete_vectorlETCanvasmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETCanvasmUgR);
      instance.SetDestructor(&destruct_vectorlETCanvasmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TCanvas*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TCanvas*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETCanvasmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TCanvas*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETCanvasmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TCanvas*> : new vector<TCanvas*>;
   }
   static void *newArray_vectorlETCanvasmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TCanvas*>[nElements] : new vector<TCanvas*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETCanvasmUgR(void *p) {
      delete ((vector<TCanvas*>*)p);
   }
   static void deleteArray_vectorlETCanvasmUgR(void *p) {
      delete [] ((vector<TCanvas*>*)p);
   }
   static void destruct_vectorlETCanvasmUgR(void *p) {
      typedef vector<TCanvas*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TCanvas*>

namespace ROOT {
   void vectorlETFilemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETFilemUgR_Dictionary();
   static void *new_vectorlETFilemUgR(void *p = 0);
   static void *newArray_vectorlETFilemUgR(Long_t size, void *p);
   static void delete_vectorlETFilemUgR(void *p);
   static void deleteArray_vectorlETFilemUgR(void *p);
   static void destruct_vectorlETFilemUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TFile*>*)
   {
      vector<TFile*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TFile*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TFile*>", -2, "/usr/local/root_v5.34.21_enableall/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TFile*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETFilemUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TFile*>) );
      instance.SetNew(&new_vectorlETFilemUgR);
      instance.SetNewArray(&newArray_vectorlETFilemUgR);
      instance.SetDelete(&delete_vectorlETFilemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETFilemUgR);
      instance.SetDestructor(&destruct_vectorlETFilemUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TFile*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TFile*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETFilemUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TFile*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETFilemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TFile*> : new vector<TFile*>;
   }
   static void *newArray_vectorlETFilemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TFile*>[nElements] : new vector<TFile*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETFilemUgR(void *p) {
      delete ((vector<TFile*>*)p);
   }
   static void deleteArray_vectorlETFilemUgR(void *p) {
      delete [] ((vector<TFile*>*)p);
   }
   static void destruct_vectorlETFilemUgR(void *p) {
      typedef vector<TFile*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TFile*>

namespace ROOT {
   void vectorlETH2FmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETH2FmUgR_Dictionary();
   static void *new_vectorlETH2FmUgR(void *p = 0);
   static void *newArray_vectorlETH2FmUgR(Long_t size, void *p);
   static void delete_vectorlETH2FmUgR(void *p);
   static void deleteArray_vectorlETH2FmUgR(void *p);
   static void destruct_vectorlETH2FmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TH2F*>*)
   {
      vector<TH2F*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TH2F*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TH2F*>", -2, "/usr/local/root_v5.34.21_enableall/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TH2F*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETH2FmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TH2F*>) );
      instance.SetNew(&new_vectorlETH2FmUgR);
      instance.SetNewArray(&newArray_vectorlETH2FmUgR);
      instance.SetDelete(&delete_vectorlETH2FmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETH2FmUgR);
      instance.SetDestructor(&destruct_vectorlETH2FmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TH2F*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TH2F*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETH2FmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TH2F*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETH2FmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH2F*> : new vector<TH2F*>;
   }
   static void *newArray_vectorlETH2FmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH2F*>[nElements] : new vector<TH2F*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETH2FmUgR(void *p) {
      delete ((vector<TH2F*>*)p);
   }
   static void deleteArray_vectorlETH2FmUgR(void *p) {
      delete [] ((vector<TH2F*>*)p);
   }
   static void destruct_vectorlETH2FmUgR(void *p) {
      typedef vector<TH2F*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TH2F*>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEvectorlETH2FmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlETH2FmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlETH2FmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlETH2FmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlETH2FmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlETH2FmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlETH2FmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<TH2F*> >*)
   {
      vector<vector<TH2F*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<TH2F*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<TH2F*> >", -2, "/usr/local/root_v5.34.21_enableall/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<TH2F*> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlETH2FmUgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<TH2F*> >) );
      instance.SetNew(&new_vectorlEvectorlETH2FmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlETH2FmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlETH2FmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlETH2FmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlETH2FmUgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<TH2F*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<TH2F*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlETH2FmUgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<TH2F*> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlETH2FmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TH2F*> > : new vector<vector<TH2F*> >;
   }
   static void *newArray_vectorlEvectorlETH2FmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TH2F*> >[nElements] : new vector<vector<TH2F*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlETH2FmUgRsPgR(void *p) {
      delete ((vector<vector<TH2F*> >*)p);
   }
   static void deleteArray_vectorlEvectorlETH2FmUgRsPgR(void *p) {
      delete [] ((vector<vector<TH2F*> >*)p);
   }
   static void destruct_vectorlEvectorlETH2FmUgRsPgR(void *p) {
      typedef vector<vector<TH2F*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<TH2F*> >

namespace ROOT {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "/usr/local/root_v5.34.21_enableall/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<double> >

namespace ROOT {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "/usr/local/root_v5.34.21_enableall/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<float> >

/********************************************************
* AmBe_collimator_diff_real_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAmBe_collimator_diff_real_Dict();

extern "C" void G__set_cpp_environmentAmBe_collimator_diff_real_Dict() {
  G__cpp_reset_tagtableAmBe_collimator_diff_real_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevAmBe_collimator_diff_real_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
static int G__AmBe_collimator_diff_real_Dict_343_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->at((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference obj = ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->at((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->resize((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->resize((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *((vector<double,allocator<double> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator[]((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference obj = ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator[]((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >;
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *(vector<double,allocator<double> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *(vector<double,allocator<double> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator=(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->reserve((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->push_back(*(vector<double,allocator<double> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->swap(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *(vector<double,allocator<double> >*) libp->para[1].ref);
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[1])
, *(vector<double,allocator<double> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->erase(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->erase(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_343_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR;
static int G__AmBe_collimator_diff_real_Dict_343_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) (soff+(sizeof(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >)*i)))->~G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) (soff))->~G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > > */
static int G__AmBe_collimator_diff_real_Dict_351_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reference obj = ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->at((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_reference obj = ((const vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->at((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator* pobj;
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator xobj = ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator* pobj;
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator xobj = ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reverse_iterator* pobj;
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reverse_iterator xobj = ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reverse_iterator* pobj;
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reverse_iterator xobj = ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->resize((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->resize((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]), *((vector<TH2F*,allocator<TH2F*> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reference obj = ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->operator[]((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_reference obj = ((const vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->operator[]((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >;
     } else {
       p = new((void*) gvp) vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]), *(vector<TH2F*,allocator<TH2F*> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]), *(vector<TH2F*,allocator<TH2F*> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >(*(vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >(*(vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >(*((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >(*((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >& obj = ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->operator=(*(vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->reserve((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TH2F*,allocator<TH2F*> >& obj = ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TH2F*,allocator<TH2F*> >& obj = ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->push_back(*(vector<TH2F*,allocator<TH2F*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->swap(*(vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator* pobj;
         vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator xobj = ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->insert(*((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator*) G__int(libp->para[0])), *(vector<TH2F*,allocator<TH2F*> >*) libp->para[1].ref);
         pobj = new vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->insert(*((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->insert(*((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator*) G__int(libp->para[0])), (vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type) G__int(libp->para[1])
, *(vector<TH2F*,allocator<TH2F*> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->erase(*((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->erase(*((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_351_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > > G__TvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR;
static int G__AmBe_collimator_diff_real_Dict_351_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) (soff+(sizeof(vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >)*i)))->~G__TvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*) (soff))->~G__TvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TFile*,allocator<TFile*> > */
static int G__AmBe_collimator_diff_real_Dict_355_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFile*,allocator<TFile*> >::reference obj = ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->at((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFile*,allocator<TFile*> >::const_reference obj = ((const vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->at((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFile*,allocator<TFile*> >::iterator* pobj;
         vector<TFile*,allocator<TFile*> >::iterator xobj = ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->begin();
         pobj = new vector<TFile*,allocator<TFile*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFile*,allocator<TFile*> >::iterator* pobj;
         vector<TFile*,allocator<TFile*> >::iterator xobj = ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->end();
         pobj = new vector<TFile*,allocator<TFile*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFile*,allocator<TFile*> >::reverse_iterator* pobj;
         vector<TFile*,allocator<TFile*> >::reverse_iterator xobj = ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TFile*,allocator<TFile*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFile*,allocator<TFile*> >::reverse_iterator* pobj;
         vector<TFile*,allocator<TFile*> >::reverse_iterator xobj = ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->rend();
         pobj = new vector<TFile*,allocator<TFile*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->resize((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->resize((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]), (TFile*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFile*,allocator<TFile*> >::reference obj = ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->operator[]((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFile*,allocator<TFile*> >::const_reference obj = ((const vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->operator[]((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TFile*,allocator<TFile*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TFile*,allocator<TFile*> >[n];
     } else {
       p = new((void*) gvp) vector<TFile*,allocator<TFile*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TFile*,allocator<TFile*> >;
     } else {
       p = new((void*) gvp) vector<TFile*,allocator<TFile*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TFile*,allocator<TFile*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TFile*,allocator<TFile*> >((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TFile**) libp->para[1].ref : *(TFile**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<TFile*,allocator<TFile*> >((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TFile**) libp->para[1].ref : *(TFile**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TFile*,allocator<TFile*> >((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TFile*,allocator<TFile*> >((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TFile*,allocator<TFile*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TFile*,allocator<TFile*> >(*(vector<TFile*,allocator<TFile*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TFile*,allocator<TFile*> >(*(vector<TFile*,allocator<TFile*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TFile*,allocator<TFile*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TFile*,allocator<TFile*> >(*((vector<TFile*,allocator<TFile*> >::const_iterator*) G__int(libp->para[0])), *((vector<TFile*,allocator<TFile*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TFile*,allocator<TFile*> >(*((vector<TFile*,allocator<TFile*> >::const_iterator*) G__int(libp->para[0])), *((vector<TFile*,allocator<TFile*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TFile*,allocator<TFile*> >& obj = ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->operator=(*(vector<TFile*,allocator<TFile*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->reserve((vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TFile*& obj = ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TFile*& obj = ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(TFile**) libp->para[0].ref : *(TFile**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->swap(*(vector<TFile*,allocator<TFile*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFile*,allocator<TFile*> >::iterator* pobj;
         vector<TFile*,allocator<TFile*> >::iterator xobj = ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->insert(*((vector<TFile*,allocator<TFile*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(TFile**) libp->para[1].ref : *(TFile**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<TFile*,allocator<TFile*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->insert(*((vector<TFile*,allocator<TFile*> >::iterator*) G__int(libp->para[0])), *((vector<TFile*,allocator<TFile*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TFile*,allocator<TFile*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->insert(*((vector<TFile*,allocator<TFile*> >::iterator*) G__int(libp->para[0])), (vector<TFile*,allocator<TFile*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(TFile**) libp->para[2].ref : *(TFile**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->erase(*((vector<TFile*,allocator<TFile*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->erase(*((vector<TFile*,allocator<TFile*> >::iterator*) G__int(libp->para[0])), *((vector<TFile*,allocator<TFile*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_355_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFile*,allocator<TFile*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TFile*,allocator<TFile*> > G__TvectorlETFilemUcOallocatorlETFilemUgRsPgR;
static int G__AmBe_collimator_diff_real_Dict_355_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TFile*,allocator<TFile*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TFile*,allocator<TFile*> >*) (soff+(sizeof(vector<TFile*,allocator<TFile*> >)*i)))->~G__TvectorlETFilemUcOallocatorlETFilemUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TFile*,allocator<TFile*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TFile*,allocator<TFile*> >*) (soff))->~G__TvectorlETFilemUcOallocatorlETFilemUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static int G__AmBe_collimator_diff_real_Dict_359_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *((vector<float,allocator<float> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator=(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->reserve((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->push_back(*(vector<float,allocator<float> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->swap(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *(vector<float,allocator<float> >*) libp->para[1].ref);
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[1])
, *(vector<float,allocator<float> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_359_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR;
static int G__AmBe_collimator_diff_real_Dict_359_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff+(sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >)*i)))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TCanvas*,allocator<TCanvas*> > */
static int G__AmBe_collimator_diff_real_Dict_363_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCanvas*,allocator<TCanvas*> >::reference obj = ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->at((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCanvas*,allocator<TCanvas*> >::const_reference obj = ((const vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->at((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCanvas*,allocator<TCanvas*> >::iterator* pobj;
         vector<TCanvas*,allocator<TCanvas*> >::iterator xobj = ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->begin();
         pobj = new vector<TCanvas*,allocator<TCanvas*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCanvas*,allocator<TCanvas*> >::iterator* pobj;
         vector<TCanvas*,allocator<TCanvas*> >::iterator xobj = ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->end();
         pobj = new vector<TCanvas*,allocator<TCanvas*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCanvas*,allocator<TCanvas*> >::reverse_iterator* pobj;
         vector<TCanvas*,allocator<TCanvas*> >::reverse_iterator xobj = ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TCanvas*,allocator<TCanvas*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCanvas*,allocator<TCanvas*> >::reverse_iterator* pobj;
         vector<TCanvas*,allocator<TCanvas*> >::reverse_iterator xobj = ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->rend();
         pobj = new vector<TCanvas*,allocator<TCanvas*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->resize((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->resize((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]), (TCanvas*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCanvas*,allocator<TCanvas*> >::reference obj = ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->operator[]((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCanvas*,allocator<TCanvas*> >::const_reference obj = ((const vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->operator[]((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCanvas*,allocator<TCanvas*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCanvas*,allocator<TCanvas*> >[n];
     } else {
       p = new((void*) gvp) vector<TCanvas*,allocator<TCanvas*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCanvas*,allocator<TCanvas*> >;
     } else {
       p = new((void*) gvp) vector<TCanvas*,allocator<TCanvas*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCanvas*,allocator<TCanvas*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCanvas*,allocator<TCanvas*> >((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TCanvas**) libp->para[1].ref : *(TCanvas**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<TCanvas*,allocator<TCanvas*> >((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TCanvas**) libp->para[1].ref : *(TCanvas**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCanvas*,allocator<TCanvas*> >((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TCanvas*,allocator<TCanvas*> >((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCanvas*,allocator<TCanvas*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TCanvas*,allocator<TCanvas*> >(*(vector<TCanvas*,allocator<TCanvas*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TCanvas*,allocator<TCanvas*> >(*(vector<TCanvas*,allocator<TCanvas*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCanvas*,allocator<TCanvas*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TCanvas*,allocator<TCanvas*> >(*((vector<TCanvas*,allocator<TCanvas*> >::const_iterator*) G__int(libp->para[0])), *((vector<TCanvas*,allocator<TCanvas*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TCanvas*,allocator<TCanvas*> >(*((vector<TCanvas*,allocator<TCanvas*> >::const_iterator*) G__int(libp->para[0])), *((vector<TCanvas*,allocator<TCanvas*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TCanvas*,allocator<TCanvas*> >& obj = ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->operator=(*(vector<TCanvas*,allocator<TCanvas*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->reserve((vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TCanvas*& obj = ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TCanvas*& obj = ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(TCanvas**) libp->para[0].ref : *(TCanvas**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->swap(*(vector<TCanvas*,allocator<TCanvas*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCanvas*,allocator<TCanvas*> >::iterator* pobj;
         vector<TCanvas*,allocator<TCanvas*> >::iterator xobj = ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->insert(*((vector<TCanvas*,allocator<TCanvas*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(TCanvas**) libp->para[1].ref : *(TCanvas**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<TCanvas*,allocator<TCanvas*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->insert(*((vector<TCanvas*,allocator<TCanvas*> >::iterator*) G__int(libp->para[0])), *((vector<TCanvas*,allocator<TCanvas*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TCanvas*,allocator<TCanvas*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->insert(*((vector<TCanvas*,allocator<TCanvas*> >::iterator*) G__int(libp->para[0])), (vector<TCanvas*,allocator<TCanvas*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(TCanvas**) libp->para[2].ref : *(TCanvas**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->erase(*((vector<TCanvas*,allocator<TCanvas*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->erase(*((vector<TCanvas*,allocator<TCanvas*> >::iterator*) G__int(libp->para[0])), *((vector<TCanvas*,allocator<TCanvas*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AmBe_collimator_diff_real_Dict_363_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCanvas*,allocator<TCanvas*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TCanvas*,allocator<TCanvas*> > G__TvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR;
static int G__AmBe_collimator_diff_real_Dict_363_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TCanvas*,allocator<TCanvas*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TCanvas*,allocator<TCanvas*> >*) (soff+(sizeof(vector<TCanvas*,allocator<TCanvas*> >)*i)))->~G__TvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TCanvas*,allocator<TCanvas*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TCanvas*,allocator<TCanvas*> >*) (soff))->~G__TvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */

/* vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > > */

/* vector<TFile*,allocator<TFile*> > */

/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */

/* vector<TCanvas*,allocator<TCanvas*> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAmBe_collimator_diff_real_Dict {
 public:
  G__Sizep2memfuncAmBe_collimator_diff_real_Dict(): p(&G__Sizep2memfuncAmBe_collimator_diff_real_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAmBe_collimator_diff_real_Dict::*p)();
};

size_t G__get_sizep2memfuncAmBe_collimator_diff_real_Dict()
{
  G__Sizep2memfuncAmBe_collimator_diff_real_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAmBe_collimator_diff_real_Dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAmBe_collimator_diff_real_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double> >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),256,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),1,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),257,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH2F*>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<TH2F*> >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TH2F*> >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR),256,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR),1,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR),257,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TH2F*,allocator<TH2F*> > >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TFile*>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile),256,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile),1,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile),257,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<float> >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),256,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),1,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),257,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TCanvas*>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas),256,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas),1,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas),257,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
static void G__setup_memvarvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   { vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > *p; p=(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > > */
static void G__setup_memvarvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   { vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > > *p; p=(vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<TFile*,allocator<TFile*> > */
static void G__setup_memvarvectorlETFilemUcOallocatorlETFilemUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   { vector<TFile*,allocator<TFile*> > *p; p=(vector<TFile*,allocator<TFile*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static void G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   { vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > *p; p=(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<TCanvas*,allocator<TCanvas*> > */
static void G__setup_memvarvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   { vector<TCanvas*,allocator<TCanvas*> > *p; p=(vector<TCanvas*,allocator<TCanvas*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAmBe_collimator_diff_real_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR(void) {
   /* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__AmBe_collimator_diff_real_Dict_343_0_1, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__AmBe_collimator_diff_real_Dict_343_0_2, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__AmBe_collimator_diff_real_Dict_343_0_3, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__AmBe_collimator_diff_real_Dict_343_0_4, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__AmBe_collimator_diff_real_Dict_343_0_5, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__AmBe_collimator_diff_real_Dict_343_0_6, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__AmBe_collimator_diff_real_Dict_343_0_7, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__AmBe_collimator_diff_real_Dict_343_0_8, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AmBe_collimator_diff_real_Dict_343_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AmBe_collimator_diff_real_Dict_343_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - sz u 'vector<double,allocator<double> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__AmBe_collimator_diff_real_Dict_343_0_11, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__AmBe_collimator_diff_real_Dict_343_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AmBe_collimator_diff_real_Dict_343_0_13, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AmBe_collimator_diff_real_Dict_343_0_14, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__AmBe_collimator_diff_real_Dict_343_0_15, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__AmBe_collimator_diff_real_Dict_343_0_16, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n u 'vector<double,allocator<double> >' - 11 '(vector<double,allocator<double> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__AmBe_collimator_diff_real_Dict_343_0_17, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__AmBe_collimator_diff_real_Dict_343_0_18, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - first u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AmBe_collimator_diff_real_Dict_343_0_19, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__AmBe_collimator_diff_real_Dict_343_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__AmBe_collimator_diff_real_Dict_343_0_21, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__AmBe_collimator_diff_real_Dict_343_0_22, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__AmBe_collimator_diff_real_Dict_343_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__AmBe_collimator_diff_real_Dict_343_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_343_0_25, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_343_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - first "
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_343_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n "
"u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__AmBe_collimator_diff_real_Dict_343_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AmBe_collimator_diff_real_Dict_343_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AmBe_collimator_diff_real_Dict_343_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - first u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AmBe_collimator_diff_real_Dict_343_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >", 8518, G__AmBe_collimator_diff_real_Dict_343_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR(void) {
   /* vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__AmBe_collimator_diff_real_Dict_351_0_1, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR), G__defined_typename("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__AmBe_collimator_diff_real_Dict_351_0_2, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR), G__defined_typename("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__AmBe_collimator_diff_real_Dict_351_0_3, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__AmBe_collimator_diff_real_Dict_351_0_4, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__AmBe_collimator_diff_real_Dict_351_0_5, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__AmBe_collimator_diff_real_Dict_351_0_6, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__AmBe_collimator_diff_real_Dict_351_0_7, 107, -1, G__defined_typename("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__AmBe_collimator_diff_real_Dict_351_0_8, 107, -1, G__defined_typename("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AmBe_collimator_diff_real_Dict_351_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AmBe_collimator_diff_real_Dict_351_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type' 0 - sz u 'vector<TH2F*,allocator<TH2F*> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__AmBe_collimator_diff_real_Dict_351_0_11, 107, -1, G__defined_typename("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__AmBe_collimator_diff_real_Dict_351_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AmBe_collimator_diff_real_Dict_351_0_13, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR), G__defined_typename("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AmBe_collimator_diff_real_Dict_351_0_14, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR), G__defined_typename("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >",7124,G__AmBe_collimator_diff_real_Dict_351_0_15, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >",7124,G__AmBe_collimator_diff_real_Dict_351_0_16, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type' 0 - n u 'vector<TH2F*,allocator<TH2F*> >' - 11 '(vector<TH2F*,allocator<TH2F*> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >",7124,G__AmBe_collimator_diff_real_Dict_351_0_17, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >",7124,G__AmBe_collimator_diff_real_Dict_351_0_18, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator' 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_iterator' 10 - first u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator' 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AmBe_collimator_diff_real_Dict_351_0_19, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__AmBe_collimator_diff_real_Dict_351_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__AmBe_collimator_diff_real_Dict_351_0_21, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__AmBe_collimator_diff_real_Dict_351_0_22, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__AmBe_collimator_diff_real_Dict_351_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TH2F*,allocator<TH2F*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__AmBe_collimator_diff_real_Dict_351_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_351_0_25, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator' - 0 - position u 'vector<TH2F*,allocator<TH2F*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_351_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator' - 0 - position u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator' 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_iterator' 10 - first "
"u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator' 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_351_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator' - 0 - position k - 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::size_type' 0 - n "
"u 'vector<TH2F*,allocator<TH2F*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__AmBe_collimator_diff_real_Dict_351_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AmBe_collimator_diff_real_Dict_351_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AmBe_collimator_diff_real_Dict_351_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator' - 0 - first u 'vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AmBe_collimator_diff_real_Dict_351_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >", 7250, G__AmBe_collimator_diff_real_Dict_351_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETFilemUcOallocatorlETFilemUgRsPgR(void) {
   /* vector<TFile*,allocator<TFile*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR));
   G__memfunc_setup("at",213,G__AmBe_collimator_diff_real_Dict_355_0_1, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile), G__defined_typename("vector<TFile*,allocator<TFile*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TFile*,allocator<TFile*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__AmBe_collimator_diff_real_Dict_355_0_2, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile), G__defined_typename("vector<TFile*,allocator<TFile*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TFile*,allocator<TFile*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__AmBe_collimator_diff_real_Dict_355_0_3, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__AmBe_collimator_diff_real_Dict_355_0_4, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__AmBe_collimator_diff_real_Dict_355_0_5, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TFile*,allocator<TFile*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__AmBe_collimator_diff_real_Dict_355_0_6, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TFile*,allocator<TFile*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__AmBe_collimator_diff_real_Dict_355_0_7, 107, -1, G__defined_typename("vector<TFile*,allocator<TFile*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__AmBe_collimator_diff_real_Dict_355_0_8, 107, -1, G__defined_typename("vector<TFile*,allocator<TFile*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AmBe_collimator_diff_real_Dict_355_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TFile*,allocator<TFile*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AmBe_collimator_diff_real_Dict_355_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TFile*,allocator<TFile*> >::size_type' 0 - sz U 'TFile' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__AmBe_collimator_diff_real_Dict_355_0_11, 107, -1, G__defined_typename("vector<TFile*,allocator<TFile*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__AmBe_collimator_diff_real_Dict_355_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AmBe_collimator_diff_real_Dict_355_0_13, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile), G__defined_typename("vector<TFile*,allocator<TFile*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TFile*,allocator<TFile*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AmBe_collimator_diff_real_Dict_355_0_14, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile), G__defined_typename("vector<TFile*,allocator<TFile*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TFile*,allocator<TFile*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TFile*,allocator<TFile*> >",2960,G__AmBe_collimator_diff_real_Dict_355_0_15, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TFile*,allocator<TFile*> >",2960,G__AmBe_collimator_diff_real_Dict_355_0_16, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TFile*,allocator<TFile*> >::size_type' 0 - n U 'TFile' - 41 '(TFile*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TFile*,allocator<TFile*> >",2960,G__AmBe_collimator_diff_real_Dict_355_0_17, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TFile*,allocator<TFile*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TFile*,allocator<TFile*> >",2960,G__AmBe_collimator_diff_real_Dict_355_0_18, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TFile*,allocator<TFile*> >::iterator' 'vector<TFile*,allocator<TFile*> >::const_iterator' 10 - first u 'vector<TFile*,allocator<TFile*> >::iterator' 'vector<TFile*,allocator<TFile*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AmBe_collimator_diff_real_Dict_355_0_19, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TFile*,allocator<TFile*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__AmBe_collimator_diff_real_Dict_355_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TFile*,allocator<TFile*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__AmBe_collimator_diff_real_Dict_355_0_21, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__AmBe_collimator_diff_real_Dict_355_0_22, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TFile), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__AmBe_collimator_diff_real_Dict_355_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__AmBe_collimator_diff_real_Dict_355_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TFile*,allocator<TFile*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_355_0_25, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TFile*,allocator<TFile*> >::iterator' - 0 - position U 'TFile' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_355_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TFile*,allocator<TFile*> >::iterator' - 0 - position u 'vector<TFile*,allocator<TFile*> >::iterator' 'vector<TFile*,allocator<TFile*> >::const_iterator' 10 - first "
"u 'vector<TFile*,allocator<TFile*> >::iterator' 'vector<TFile*,allocator<TFile*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_355_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TFile*,allocator<TFile*> >::iterator' - 0 - position k - 'vector<TFile*,allocator<TFile*> >::size_type' 0 - n "
"U 'TFile' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__AmBe_collimator_diff_real_Dict_355_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AmBe_collimator_diff_real_Dict_355_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TFile*,allocator<TFile*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AmBe_collimator_diff_real_Dict_355_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TFile*,allocator<TFile*> >::iterator' - 0 - first u 'vector<TFile*,allocator<TFile*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AmBe_collimator_diff_real_Dict_355_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TFile*,allocator<TFile*> >", 3086, G__AmBe_collimator_diff_real_Dict_355_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__AmBe_collimator_diff_real_Dict_359_0_1, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__AmBe_collimator_diff_real_Dict_359_0_2, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__AmBe_collimator_diff_real_Dict_359_0_3, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__AmBe_collimator_diff_real_Dict_359_0_4, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__AmBe_collimator_diff_real_Dict_359_0_5, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__AmBe_collimator_diff_real_Dict_359_0_6, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__AmBe_collimator_diff_real_Dict_359_0_7, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__AmBe_collimator_diff_real_Dict_359_0_8, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AmBe_collimator_diff_real_Dict_359_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AmBe_collimator_diff_real_Dict_359_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz u 'vector<float,allocator<float> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__AmBe_collimator_diff_real_Dict_359_0_11, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__AmBe_collimator_diff_real_Dict_359_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AmBe_collimator_diff_real_Dict_359_0_13, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AmBe_collimator_diff_real_Dict_359_0_14, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__AmBe_collimator_diff_real_Dict_359_0_15, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__AmBe_collimator_diff_real_Dict_359_0_16, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n u 'vector<float,allocator<float> >' - 11 '(vector<float,allocator<float> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__AmBe_collimator_diff_real_Dict_359_0_17, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__AmBe_collimator_diff_real_Dict_359_0_18, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AmBe_collimator_diff_real_Dict_359_0_19, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__AmBe_collimator_diff_real_Dict_359_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__AmBe_collimator_diff_real_Dict_359_0_21, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__AmBe_collimator_diff_real_Dict_359_0_22, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__AmBe_collimator_diff_real_Dict_359_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__AmBe_collimator_diff_real_Dict_359_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_359_0_25, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_359_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first "
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_359_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n "
"u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__AmBe_collimator_diff_real_Dict_359_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AmBe_collimator_diff_real_Dict_359_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AmBe_collimator_diff_real_Dict_359_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AmBe_collimator_diff_real_Dict_359_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >", 8114, G__AmBe_collimator_diff_real_Dict_359_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR(void) {
   /* vector<TCanvas*,allocator<TCanvas*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__memfunc_setup("at",213,G__AmBe_collimator_diff_real_Dict_363_0_1, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas), G__defined_typename("vector<TCanvas*,allocator<TCanvas*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TCanvas*,allocator<TCanvas*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__AmBe_collimator_diff_real_Dict_363_0_2, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas), G__defined_typename("vector<TCanvas*,allocator<TCanvas*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TCanvas*,allocator<TCanvas*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__AmBe_collimator_diff_real_Dict_363_0_3, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__AmBe_collimator_diff_real_Dict_363_0_4, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__AmBe_collimator_diff_real_Dict_363_0_5, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TCanvas*,allocator<TCanvas*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__AmBe_collimator_diff_real_Dict_363_0_6, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TCanvas*,allocator<TCanvas*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__AmBe_collimator_diff_real_Dict_363_0_7, 107, -1, G__defined_typename("vector<TCanvas*,allocator<TCanvas*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__AmBe_collimator_diff_real_Dict_363_0_8, 107, -1, G__defined_typename("vector<TCanvas*,allocator<TCanvas*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AmBe_collimator_diff_real_Dict_363_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TCanvas*,allocator<TCanvas*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AmBe_collimator_diff_real_Dict_363_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TCanvas*,allocator<TCanvas*> >::size_type' 0 - sz U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__AmBe_collimator_diff_real_Dict_363_0_11, 107, -1, G__defined_typename("vector<TCanvas*,allocator<TCanvas*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__AmBe_collimator_diff_real_Dict_363_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AmBe_collimator_diff_real_Dict_363_0_13, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas), G__defined_typename("vector<TCanvas*,allocator<TCanvas*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TCanvas*,allocator<TCanvas*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AmBe_collimator_diff_real_Dict_363_0_14, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas), G__defined_typename("vector<TCanvas*,allocator<TCanvas*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TCanvas*,allocator<TCanvas*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCanvas*,allocator<TCanvas*> >",3400,G__AmBe_collimator_diff_real_Dict_363_0_15, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCanvas*,allocator<TCanvas*> >",3400,G__AmBe_collimator_diff_real_Dict_363_0_16, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TCanvas*,allocator<TCanvas*> >::size_type' 0 - n U 'TCanvas' - 41 '(TCanvas*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCanvas*,allocator<TCanvas*> >",3400,G__AmBe_collimator_diff_real_Dict_363_0_17, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TCanvas*,allocator<TCanvas*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCanvas*,allocator<TCanvas*> >",3400,G__AmBe_collimator_diff_real_Dict_363_0_18, 105, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TCanvas*,allocator<TCanvas*> >::iterator' 'vector<TCanvas*,allocator<TCanvas*> >::const_iterator' 10 - first u 'vector<TCanvas*,allocator<TCanvas*> >::iterator' 'vector<TCanvas*,allocator<TCanvas*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AmBe_collimator_diff_real_Dict_363_0_19, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TCanvas*,allocator<TCanvas*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__AmBe_collimator_diff_real_Dict_363_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TCanvas*,allocator<TCanvas*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__AmBe_collimator_diff_real_Dict_363_0_21, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__AmBe_collimator_diff_real_Dict_363_0_22, 85, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_TCanvas), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__AmBe_collimator_diff_real_Dict_363_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__AmBe_collimator_diff_real_Dict_363_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TCanvas*,allocator<TCanvas*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_363_0_25, 117, G__get_linked_tagnum(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TCanvas*,allocator<TCanvas*> >::iterator' - 0 - position U 'TCanvas' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_363_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TCanvas*,allocator<TCanvas*> >::iterator' - 0 - position u 'vector<TCanvas*,allocator<TCanvas*> >::iterator' 'vector<TCanvas*,allocator<TCanvas*> >::const_iterator' 10 - first "
"u 'vector<TCanvas*,allocator<TCanvas*> >::iterator' 'vector<TCanvas*,allocator<TCanvas*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AmBe_collimator_diff_real_Dict_363_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TCanvas*,allocator<TCanvas*> >::iterator' - 0 - position k - 'vector<TCanvas*,allocator<TCanvas*> >::size_type' 0 - n "
"U 'TCanvas' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__AmBe_collimator_diff_real_Dict_363_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AmBe_collimator_diff_real_Dict_363_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TCanvas*,allocator<TCanvas*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AmBe_collimator_diff_real_Dict_363_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TCanvas*,allocator<TCanvas*> >::iterator' - 0 - first u 'vector<TCanvas*,allocator<TCanvas*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AmBe_collimator_diff_real_Dict_363_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TCanvas*,allocator<TCanvas*> >", 3526, G__AmBe_collimator_diff_real_Dict_363_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAmBe_collimator_diff_real_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAmBe_collimator_diff_real_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAmBe_collimator_diff_real_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR = { "vector<TH2F*,allocator<TH2F*> >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH2F*,allocator<TH2F*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR = { "vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR = { "vector<TFile*,allocator<TFile*> >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator = { "vector<TFile*,allocator<TFile*> >::iterator" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TFile*,allocator<TFile*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR = { "vector<TCanvas*,allocator<TCanvas*> >" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiterator = { "vector<TCanvas*,allocator<TCanvas*> >::iterator" , 99 , -1 };
G__linked_taginfo G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TCanvas*,allocator<TCanvas*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAmBe_collimator_diff_real_Dict() {
  G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_TFile.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_TCanvas.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAmBe_collimator_diff_real_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_TFile);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),sizeof(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR),sizeof(vector<vector<TH2F*,allocator<TH2F*> >,allocator<vector<TH2F*,allocator<TH2F*> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcOallocatorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgR),sizeof(vector<TFile*,allocator<TFile*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETFilemUcOallocatorlETFilemUgRsPgR,G__setup_memfuncvectorlETFilemUcOallocatorlETFilemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETFilemUcOallocatorlETFilemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR),sizeof(vector<TCanvas*,allocator<TCanvas*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR,G__setup_memfuncvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AmBe_collimator_diff_real_DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupAmBe_collimator_diff_real_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupAmBe_collimator_diff_real_Dict()");
  G__set_cpp_environmentAmBe_collimator_diff_real_Dict();
  G__cpp_setup_tagtableAmBe_collimator_diff_real_Dict();

  G__cpp_setup_inheritanceAmBe_collimator_diff_real_Dict();

  G__cpp_setup_typetableAmBe_collimator_diff_real_Dict();

  G__cpp_setup_memvarAmBe_collimator_diff_real_Dict();

  G__cpp_setup_memfuncAmBe_collimator_diff_real_Dict();
  G__cpp_setup_globalAmBe_collimator_diff_real_Dict();
  G__cpp_setup_funcAmBe_collimator_diff_real_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAmBe_collimator_diff_real_Dict();
  return;
}
class G__cpp_setup_initAmBe_collimator_diff_real_Dict {
  public:
    G__cpp_setup_initAmBe_collimator_diff_real_Dict() { G__add_setup_func("AmBe_collimator_diff_real_Dict",(G__incsetup)(&G__cpp_setupAmBe_collimator_diff_real_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAmBe_collimator_diff_real_Dict() { G__remove_setup_func("AmBe_collimator_diff_real_Dict"); }
};
G__cpp_setup_initAmBe_collimator_diff_real_Dict G__cpp_setup_initializerAmBe_collimator_diff_real_Dict;

